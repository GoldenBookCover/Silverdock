---

# All services:
# workspace php-fpm mariadb mongo redis queue-worker django celery daphne

version: '3'
services:
  ###########################################################################
  # Workspace
  ###########################################################################
  workspace:
    build:
      context: ./build/workspace-${WORKSPACE_BASE}
      args:
        SILVERDOCK_PHP_VERSION: ${PHP_VERSION}
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        PUID: ${PHP_PUID}
        PGID: ${PHP_PGID}
        PHP_INSTALL_GD: ${PHP_INSTALL_GD}
        PHP_INSTALL_GMP: ${PHP_INSTALL_GMP}
        PHP_INSTALL_MONGO: ${PHP_INSTALL_MONGO}
        PHP_INSTALL_REDIS: ${PHP_INSTALL_REDIS}
        PHP_INSTALL_OPENCC: ${PHP_INSTALL_OPENCC}
        PHP_INSTALL_WPCLI: ${PHP_INSTALL_WPCLI}
        SILVERDOCK_PYTHON_VERSION: ${PYTHON_VERSION}
        PYTHON_INSTALL_ANSIBLE: ${PYTHON_INSTALL_ANSIBLE}
        PYTHON_INSTALL_CELERY: ${PYTHON_INSTALL_CELERY}
        PYTHON_INSTALL_CHANNELS: ${PYTHON_INSTALL_CHANNELS}
        PYTHON_INSTALL_GOOGLEAPI: ${PYTHON_INSTALL_GOOGLEAPI}
        PYTHON_INSTALL_ELASTICSEARCH: ${PYTHON_INSTALL_ELASTICSEARCH}
        PYTHON_INSTALL_NMAP: ${PYTHON_INSTALL_NMAP}
        PYTHON_INSTALL_PYTEST: ${PYTHON_INSTALL_PYTEST}
        PYTHON_INSTALL_REDIS: ${PYTHON_INSTALL_REDIS}
        PYTHON_INSTALL_TREEBEARD: ${PYTHON_INSTALL_TREEBEARD}
        PYTHON_INSTALL_WKHTMLTOPDF: ${PYTHON_INSTALL_WKHTMLTOPDF}
        PYTHON_IS_PRODUCTION: ${PYTHON_IS_PRODUCTION}
        INSTALL_NODEJS: ${INSTALL_NODEJS}
        NODEJS_VERSION: ${NODEJS_VERSION}
    #restart: always
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    volumes:
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
    networks:
      - backend

  ###########################################################################
  # Backend
  ###########################################################################
  php-fpm:
    build:
      context: ./build/php-fpm
      args:
        SILVERDOCK_PHP_VERSION: ${PHP_VERSION}
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        PUID: ${PHP_PUID}
        PGID: ${PHP_PGID}
        PHP_INSTALL_GD: ${PHP_INSTALL_GD}
        PHP_INSTALL_GMP: ${PHP_INSTALL_GMP}
        PHP_INSTALL_MONGO: ${PHP_INSTALL_MONGO}
        PHP_INSTALL_REDIS: ${PHP_INSTALL_REDIS}
        PHP_INSTALL_OPENCC: ${PHP_INSTALL_OPENCC}
    #restart: always
    ports:
      - "127.0.0.1:${PHP_FPM_LISTEN_PORT}:9000"
    volumes:
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
    networks:
      backend:
        aliases:
          - php

  django:
    build:
      context: ./build/django
      args:
        SILVERDOCK_PYTHON_VERSION: ${PYTHON_VERSION}
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        PYTHON_INSTALL_ANSIBLE: ${PYTHON_INSTALL_ANSIBLE}
        PYTHON_INSTALL_CELERY: ${PYTHON_INSTALL_CELERY}
        PYTHON_INSTALL_CHANNELS: ${PYTHON_INSTALL_CHANNELS}
        PYTHON_INSTALL_GOOGLEAPI: ${PYTHON_INSTALL_GOOGLEAPI}
        PYTHON_INSTALL_ELASTICSEARCH: ${PYTHON_INSTALL_ELASTICSEARCH}
        PYTHON_INSTALL_NMAP: ${PYTHON_INSTALL_NMAP}
        PYTHON_INSTALL_PYTEST: ${PYTHON_INSTALL_PYTEST}
        PYTHON_INSTALL_REDIS: ${PYTHON_INSTALL_REDIS}
        PYTHON_INSTALL_TREEBEARD: ${PYTHON_INSTALL_TREEBEARD}
        PYTHON_INSTALL_WKHTMLTOPDF: ${PYTHON_INSTALL_WKHTMLTOPDF}
        PYTHON_IS_PRODUCTION: ${PYTHON_IS_PRODUCTION}
    #command: uwsgi --ini uwsgi.ini
    #restart: always
    ports: 
      - "127.0.0.1:${DJANGO_PORT}:8000"
      - "127.0.0.1:${DJANGO_STATS_PORT}:9191"
    volumes: 
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
    networks:
      - backend

  ###########################################################################
  # Nginx
  ###########################################################################
  nginx:
    build:
      context: ./build/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - DJANGO_UPSTREAM_CONTAINER=${NGINX_DJANGO_UPSTREAM_CONTAINER}
        - DJANGO_UPSTREAM_PORT=${NGINX_DJANGO_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
      - "${VARNISH_BACKEND_PORT}:81"
    networks:
      - backend

  ###########################################################################
  # Database
  ###########################################################################
  mariadb:
    image: mariadb:${MARIADB_VERSION}-bionic
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    #restart: always
    #volumes:
    #  - "./data/mariadb${MARIADB_VERSION}:/var/lib/mysql"
    ports:
      - "127.0.0.1:${MARIADB_PORT}:3306"
    networks:
      backend:
        aliases:
          - mysql

  mongo:
    build:
      context: ./build/mongo
      args: 
        SIRVERDOCK_MONGO_VERSION: ${MONGO_VERSION}
    command: mongod --auth --bind_ip_all --port ${MONGODB_PORT}
    # mongodb cluster
    # command: mongod --auth --replSet ${MONGO_CLUSTER_NAME} --bind_ip_all --keyFile /etc/mongo-cluster.key --port ${MONGODB_PORT}
    expose:
      - "27017"
    volumes:
      - ./data/mongo:/data/db
      - ./data/mongo_config:/data/configdb
      #- /path/to/archive:/data/dump  # For backup
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
    networks:
      - backend

  redis:
    image: redis:6
    command: redis-server /usr/local/etc/redis/redis.conf
    #restart: always
    expose: 
      - "6379"
    volumes:
      - "./conf/redis/redis.conf:/usr/local/etc/redis/redis.conf"
      #- "./data/redis:/data"
    networks: 
      - backend

  ###########################################################################
  # Message Queue
  ###########################################################################
  queue-worker:
    build:
      context: ./build/php-fpm
      args:
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        SILVERDOCK_PHP_VERSION: ${PHP_VERSION}
        PUID: ${PHP_PUID}
        PGID: ${PHP_PGID}
        PHP_INSTALL_GD: ${PHP_INSTALL_GD}
        PHP_INSTALL_GMP: ${PHP_INSTALL_GMP}
        PHP_INSTALL_MONGO: ${PHP_INSTALL_MONGO}
        PHP_INSTALL_REDIS: ${PHP_INSTALL_REDIS}
        PHP_INSTALL_OPENCC: ${PHP_INSTALL_OPENCC}
    #restart: always
    user: www-data
    command: php /usr/share/nginx/${COMPOSE_PROJECT_NAME}/artisan queue:work --sleep=3 --tries=3
    volumes:
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
    depends_on:
      - php-fpm
    networks:
      - backend

  celery:
    build:
      context: ./build/celery
      args:
        SILVERDOCK_PYTHON_VERSION: ${PYTHON_VERSION}
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    command: celery -A core worker -l INFO
    #restart: always
    volumes: 
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
    networks:
      - backend

  daphne:
    build:
      context: ./build/daphne
      args:
        SILVERDOCK_PYTHON_VERSION: ${PYTHON_VERSION}
        PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    command: daphne -b 0.0.0.0 -p 8000 core.asgi:application
    #restart: always
    ports: 
      - "28002:8000"
    volumes: 
      - "${PROJECT_ROOT_PATH}:/usr/share/nginx/${COMPOSE_PROJECT_NAME}"
    networks:
      - backend

networks: 
  backend:
    driver: bridge
