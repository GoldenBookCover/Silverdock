upstream silver_django {
    # connect to this socket
    # server unix:/var/run/uwsgi/first.sock;
    server 127.0.0.1:28000;
}
upstream php_fpm {
    server 127.0.0.1:9008;
}

server {
    listen 80;
    server_name test-silver.maison.com;

    root  /var/www/public;
    index index.php index.html index.htm;

    charset utf-8;
    server_tokens off;

    # Laravel5.x 防攻击配置
    # 页面可以在相同域名页面的 frame 中展示。
    #
    # XSS 是跨站脚本攻击，是比较常见的网络攻击手段，改字段指示浏览器是否
    # 为当前页面开启浏览器内建的 XSS 过滤机制。 1 表示允许过滤器，
    # mode=block 指示浏览器在检测到 XSS 攻击后禁止加载整个页面。
    #
    # 响应头设置禁用浏览器对 Content-Type 类型进行猜测的行为。
    #
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Laravel重写至控制前端器
    location / {
        #try_files $uri $uri/ /index.php$is_args$args;
        #uwsgi_read_timeout 300s;
        #uwsgi_send_timeout 300s;
        #uwsgi_pass silver_django;
        #include /etc/nginx/uwsgi_params; # or the uwsgi_params you installed manually
	proxy_pass http://silver_django;
	proxy_set_header Host $http_host;
    }

    # 不记录 favicon.ico 和 robots.txt 日志
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # 不太好排错，开发环境不建议设置
    error_page 404 /404.html;

    #location ~ \.php$ {
    #    # 不要禁用这个，有重大安全隐患
    #    try_files $uri =404;
    #    fastcgi_pass php_fpm;
    #    fastcgi_index index.php;
    #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #    include fastcgi_params;
    #}

    location ~ /\.(?!well-known).* {
        deny all;
    }

    # 禁止下载.htaccess
    location ~ /\.ht {
        deny all;
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }

    access_log /var/log/nginx/test_silver.a.log main;
    error_log  /var/log/nginx/test_silver.e.log info;
}
